{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Desktop\\\\pizza palace\\\\PizzaPalace\\\\client\\\\src\\\\components\\\\UserEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport { Helmet } from 'react-helmet-async';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Store } from '../Store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_REQUEST':\n      return { ...state,\n        loading: true\n      };\n\n    case 'FETCH_SUCCESS':\n      return { ...state,\n        loading: false\n      };\n\n    case 'FETCH_FAIL':\n      return { ...state,\n        loading: false,\n        error: action.payload\n      };\n\n    case 'UPDATE_REQUEST':\n      return { ...state,\n        loadingUpdate: true\n      };\n\n    case 'UPDATE_SUCCESS':\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    case 'UPDATE_FAIL':\n      return { ...state,\n        loadingUpdate: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default function UserEditScreen() {\n  _s();\n\n  const [{\n    loading,\n    error,\n    loadingUpdate\n  }, dispatch] = useReducer(reducer, {\n    loading: true,\n    error: ''\n  });\n  const {\n    state\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const params = useParams();\n  const {\n    id: userId\n  } = params;\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        dispatch({\n          type: 'FETCH_REQUEST'\n        });\n        const {\n          data\n        } = await axios.get(`/api/users/${userId}`, {\n          headers: {\n            authorization: `Bearer${userInfo.token}`\n          }\n        });\n        setName(data.name);\n        setEmail(data.email);\n        setIsAdmin(data.isAdmin);\n        dispatch({\n          type: 'FETCH_SUCCESS'\n        });\n      } catch (err) {\n        dispatch({\n          type: 'FETCH_FAIL',\n          payload: err\n        });\n      }\n    };\n\n    fetchData();\n  }, [userId, userInfo]);\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    try {\n      dispatch({\n        type: 'UPDATE_REQUEST'\n      });\n      await axios.put(`/api/users/${userId}`, {\n        _id: userId,\n        name,\n        email,\n        isAdmin\n      }, {\n        headers: {\n          authorization: `Bearer${userInfo.token}`\n        }\n      });\n      dispatch({\n        type: 'UPDATE_SUCCESS'\n      });\n      toast.success('User updated successfully');\n      navigate('/admin/users');\n    } catch (error) {\n      toast.error(error);\n      dispatch({\n        type: 'UPDATE_FAIL'\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [\"Edit User $\", userId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Edit User \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: email,\n          type: \"email\",\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n        className: \"mb-3\",\n        type: \"checkbox\",\n        id: \"isAdmin\",\n        label: \"isAdmin\",\n        checked: isAdmin,\n        onChange: e => setIsAdmin(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          disabled: loadingUpdate,\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserEditScreen, \"RSlu6J/iKsMluzQvZjNU787H/50=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = UserEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditScreen\");","map":{"version":3,"names":["axios","React","useContext","useEffect","useReducer","useState","Form","Button","Container","Helmet","useNavigate","useParams","toast","LoadingBox","MessageBox","Store","reducer","state","action","type","loading","error","payload","loadingUpdate","UserEditScreen","dispatch","userInfo","params","id","userId","navigate","name","setName","email","setEmail","isAdmin","setIsAdmin","fetchData","data","get","headers","authorization","token","err","submitHandler","e","preventDefault","put","_id","success","target","value","checked"],"sources":["C:/Users/Admin/OneDrive/Desktop/pizza palace/PizzaPalace/client/src/components/UserEditScreen.js"],"sourcesContent":["import axios from 'axios';\r\nimport React, { useContext, useEffect, useReducer, useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport { Store } from '../Store';\r\n\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_REQUEST':\r\n            return { ...state, loading: true };\r\n        case 'FETCH_SUCCESS':\r\n            return { ...state, loading: false };\r\n        case 'FETCH_FAIL':\r\n            return { ...state, loading: false, error: action.payload };\r\n        case 'UPDATE_REQUEST':\r\n            return { ...state, loadingUpdate: true };\r\n        case 'UPDATE_SUCCESS':\r\n            return { ...state, loadingUpdate: false };\r\n        case 'UPDATE_FAIL':\r\n            return { ...state, loadingUpdate: false };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default function UserEditScreen() {\r\n    const [{ loading, error, loadingUpdate }, dispatch] = useReducer(reducer, {\r\n        loading: true,\r\n        error: '',\r\n    });\r\n\r\n    const { state } = useContext(Store);\r\n    const { userInfo } = state;\r\n\r\n    const params = useParams();\r\n    const { id: userId } = params;\r\n    const navigate = useNavigate();\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                dispatch({ type: 'FETCH_REQUEST' });\r\n                const { data } = await axios.get(`/api/users/${userId}`, {\r\n                    headers:{authorization:`Bearer${userInfo.token}`},\r\n                });\r\n                setName(data.name);\r\n                setEmail(data.email);\r\n                setIsAdmin(data.isAdmin);\r\n                dispatch({ type: 'FETCH_SUCCESS' });\r\n            } catch (err) {\r\n                dispatch({\r\n                    type: 'FETCH_FAIL',\r\n                    payload: err,\r\n                });\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [userId, userInfo]);\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            dispatch({ type: 'UPDATE_REQUEST' });\r\n            await axios.put(\r\n                `/api/users/${userId}`,\r\n                { _id: userId, name, email, isAdmin },\r\n                {\r\n                    headers:{authorization:`Bearer${userInfo.token}`},\r\n                }\r\n            );\r\n            dispatch({\r\n                type: 'UPDATE_SUCCESS',\r\n            });\r\n            toast.success('User updated successfully');\r\n            navigate('/admin/users');\r\n        } catch (error) {\r\n            toast.error(error);\r\n            dispatch({ type: 'UPDATE_FAIL' });\r\n        }\r\n    };\r\n    return (\r\n        <Container className=\"small-container\">\r\n            <Helmet>\r\n                <title>Edit User ${userId}</title>\r\n            </Helmet>\r\n            <h1>Edit User {userId}</h1>\r\n\r\n            {loading ? (\r\n                <LoadingBox></LoadingBox>\r\n            ) : error ? (\r\n                <MessageBox variant=\"danger\">{error}</MessageBox>\r\n            ) : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control\r\n                            value={email}\r\n                            type=\"email\"\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Check\r\n                        className=\"mb-3\"\r\n                        type=\"checkbox\"\r\n                        id=\"isAdmin\"\r\n                        label=\"isAdmin\"\r\n                        checked={isAdmin}\r\n                        onChange={(e) => setIsAdmin(e.target.checked)}\r\n                    />\r\n\r\n                    <div className=\"mb-3\">\r\n                        <Button disabled={loadingUpdate} type=\"submit\">\r\n                            Update\r\n                        </Button>\r\n                        {loadingUpdate && <LoadingBox></LoadingBox>}\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Container>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}