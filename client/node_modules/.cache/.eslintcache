[{"C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\index.js":"1","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\App.js":"2","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\Store.js":"3","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\SigninScreen.js":"4","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\HomeScreen.js":"5","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\PaymentScreen.js":"6","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\SignupScreen.js":"7","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\ProductScreen.js":"8","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\PlaceOrderScreen.js":"9","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\CartScreen.js":"10","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\ShippingScreen.js":"11","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\Categoryitem.js":"12","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\OrderHistoryScreen.js":"13","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\OrderScreen.js":"14","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\Protectedroute.js":"15","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\OrderListScreen.js":"16","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\ProfileScreen.js":"17","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\ProductListScreen.js":"18","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\UserEditScreen.js":"19","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\ProductEditScreen.js":"20","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\UserListScreen.js":"21","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\Dashboardscreen.js":"22","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\MessageBox.js":"23","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\Product.js":"24","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\Checkoutsteps.js":"25","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\LoadingBox.js":"26"},{"size":511,"mtime":1712806495347,"results":"27","hashOfConfig":"28"},{"size":8602,"mtime":1715260663027,"results":"29","hashOfConfig":"28"},{"size":2273,"mtime":1712806495315,"results":"30","hashOfConfig":"28"},{"size":3272,"mtime":1712806495331,"results":"31","hashOfConfig":"28"},{"size":2213,"mtime":1712921145960,"results":"32","hashOfConfig":"28"},{"size":2087,"mtime":1712806495331,"results":"33","hashOfConfig":"28"},{"size":4212,"mtime":1712806495331,"results":"34","hashOfConfig":"28"},{"size":4915,"mtime":1712921089098,"results":"35","hashOfConfig":"28"},{"size":7026,"mtime":1715101305027,"results":"36","hashOfConfig":"28"},{"size":4404,"mtime":1712920991914,"results":"37","hashOfConfig":"28"},{"size":3776,"mtime":1712806495331,"results":"38","hashOfConfig":"28"},{"size":2609,"mtime":1712806495315,"results":"39","hashOfConfig":"28"},{"size":3242,"mtime":1712806495331,"results":"40","hashOfConfig":"28"},{"size":10615,"mtime":1715088085578,"results":"41","hashOfConfig":"28"},{"size":317,"mtime":1712806495331,"results":"42","hashOfConfig":"28"},{"size":4590,"mtime":1712806495331,"results":"43","hashOfConfig":"28"},{"size":3185,"mtime":1712806495331,"results":"44","hashOfConfig":"28"},{"size":5533,"mtime":1712806495331,"results":"45","hashOfConfig":"28"},{"size":5024,"mtime":1712806495331,"results":"46","hashOfConfig":"28"},{"size":8220,"mtime":1712806495331,"results":"47","hashOfConfig":"28"},{"size":4136,"mtime":1712806495331,"results":"48","hashOfConfig":"28"},{"size":4160,"mtime":1712806495331,"results":"49","hashOfConfig":"28"},{"size":229,"mtime":1712806495331,"results":"50","hashOfConfig":"28"},{"size":2065,"mtime":1712806495331,"results":"51","hashOfConfig":"28"},{"size":518,"mtime":1712806495315,"results":"52","hashOfConfig":"28"},{"size":292,"mtime":1712806495331,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ff3mhg",{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\index.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\App.js",["139"],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\Store.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\SigninScreen.js",["140"],[],"import react, { useContext, useEffect, useState } from 'react';\r\nimport '../Style.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { toast } from 'react-toastify';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport Form from 'react-bootstrap/Form';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/esm/Button';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Store } from '../Store';\r\nconst SignIn = () => {\r\n    const navigate = useNavigate();\r\n    const { search } = useLocation();\r\n    const redirectUrl = new URLSearchParams(search).get('redirect');\r\n    const redirect = redirectUrl ? redirectUrl : '/';\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const { state, dispatch: ctxDispatch } = useContext(Store);\r\n    const { userInfo } = state;\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const { data } = await axios.post('/api/users/signin', {\r\n                email,\r\n                password,\r\n            });\r\n            ctxDispatch({ type: 'USER_SIGNIN', payload: data })\r\n            localStorage.setItem('userInfo', JSON.stringify(data));\r\n            navigate(redirect || '/');\r\n        } catch (error) {\r\n            toast.error('Invalid email or password');\r\n\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate(redirect);\r\n        }\r\n\r\n\r\n    }, [navigate, redirect, userInfo]);\r\n    return (\r\n        <div>\r\n            <Container className=\"small-container\">\r\n                <Helmet>\r\n                    <title>SignIn</title>\r\n                </Helmet>\r\n                <h1 className=\"my-3\" style={{ textAlign: 'center' }}>Sign In</h1>\r\n                <Card className=\"sigin-card\">\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group className=\"mb-3\" controlId=\"email\" style={{ padding: '10px' }}>\r\n                            <Form.Label><h6>Email</h6></Form.Label>\r\n                            <Form.Control type=\"email\" required onChange={(e) => setEmail(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"password\" style={{ padding: '10px' }}>\r\n                            <Form.Label><h6>Password</h6></Form.Label>\r\n                            <Form.Control type=\"password\" required onChange={(e) => setPassword(e.target.value)} />\r\n                        </Form.Group>\r\n                        <div className=\"mb-3\" style={{ padding: '10px', textAlign: 'center' }}>\r\n                            <Button type=\"submit\" variant=\"danger\"  ><h6>SignIn</h6></Button>\r\n                        </div>\r\n                        <div className=\"mb-3\" style={{ padding: '10px', textAlign: 'center' }}>\r\n                            New Customer {''}\r\n                            <Link to={`/signup?redirect=${redirect}`}>Creat your account</Link>\r\n                        </div>\r\n                    </Form>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\nexport default SignIn;","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\HomeScreen.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\PaymentScreen.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\SignupScreen.js",["141"],[],"import react, { useContext, useEffect, useState } from 'react';\r\nimport '../Style.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { toast } from 'react-toastify';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport Form from 'react-bootstrap/Form';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/esm/Button';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { Store } from '../Store';\r\nconst Signup = () => {\r\n    const navigate = useNavigate();\r\n    const { search } = useLocation();\r\n    const redirectUrl = new URLSearchParams(search).get('redirect');\r\n    const redirect = redirectUrl ? redirectUrl : '/';\r\n    const [name,setName]=useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword,setconfirmPassword]=useState('');\r\n    const { state, dispatch: ctxDispatch } = useContext(Store);\r\n    const { userInfo } = state;\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n        if(password!==confirmPassword)\r\n        {\r\n            toast.error('Password do not match');\r\n            return;\r\n        }\r\n        try {\r\n            const { data } = await axios.post('/api/users/signup', {\r\n                name,\r\n                email,\r\n                password,\r\n            });\r\n            ctxDispatch({ type: 'USER_SIGNIN', payload: data })\r\n            localStorage.setItem('userInfo', JSON.stringify(data));\r\n            navigate(redirect || '/');\r\n        } catch (error) {\r\n            toast.error('Invalid email or password');\r\n\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate(redirect);\r\n        }\r\n\r\n\r\n    }, [navigate, redirect, userInfo]);\r\n    return (\r\n        <div>\r\n            <Container className=\"small-container\">\r\n                <Helmet>\r\n                    <title>SignUp</title>\r\n                </Helmet>\r\n                <h1 className=\"my-3\" style={{ textAlign: 'center' }}>Sign Up</h1>\r\n                <Card className=\"sigin-card\">\r\n                    <Form onSubmit={submitHandler}>\r\n                             <Form.Group className=\"mb-3\" controlId=\"name\" style={{ padding: '10px' }}>\r\n                            <Form.Label><h6>Name</h6></Form.Label>\r\n                            <Form.Control type=\"text\" required onChange={(e) => setName(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"email\" style={{ padding: '10px' }}>\r\n                            <Form.Label><h6>Email</h6></Form.Label>\r\n                            <Form.Control type=\"email\" required onChange={(e) => setEmail(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"password\" style={{ padding: '10px' }}>\r\n                            <Form.Label><h6>Password</h6></Form.Label>\r\n                            <Form.Control type=\"password\" required onChange={(e) => setPassword(e.target.value)} />\r\n                        </Form.Group>\r\n                             <Form.Group className=\"mb-3\" controlId=\"confirmpassword\" style={{ padding: '10px' }}>\r\n                            <Form.Label><h6>ConfirmPassword</h6></Form.Label>\r\n                            <Form.Control type=\"password\" required onChange={(e) => setconfirmPassword(e.target.value)} />\r\n                        </Form.Group>\r\n\r\n                        <div className=\"mb-3\" style={{ padding: '10px', textAlign: 'center' }}>\r\n                            <Button type=\"submit\" variant=\"danger\"  ><h6>SignUp</h6></Button>\r\n                        </div>\r\n                        <div className=\"mb-3\" style={{ padding: '10px', textAlign: 'center' }}>\r\n                            Already have an account {''}\r\n                            <Link to={`/signin?redirect=${redirect}`}>Sign-In</Link>\r\n                        </div>\r\n                    </Form>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\nexport default Signup;","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\ProductScreen.js",["142"],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\PlaceOrderScreen.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\CartScreen.js",["143","144"],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\ShippingScreen.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\Categoryitem.js",["145","146","147"],[],"import axios from 'axios';\r\nimport React, { useEffect, useReducer } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/esm/Button';\r\nimport Row from 'react-bootstrap/esm/Row';\r\nimport Col from 'react-bootstrap/esm/Col';\r\nimport { Link } from 'react-router-dom';\r\n  const reducer=(state,action)=>{\r\n    switch(action.type)\r\n    {\r\n        case 'FETCH_REQUEST': return {...state,loading:true};\r\n        case 'FETCH_SUCCESS':return {...state,pizzas:action.payload,loading:false};\r\n        case 'FETCH_FAIL':return {...state,loading:false,error:action.payload};\r\n        default: return state;\r\n    }\r\n}\r\nexport default function Categoryitem() {\r\n    const params=useParams();\r\n    const {category}=params;\r\n   \r\nconst [{loading,error,pizzas,},dispatch]=useReducer(reducer,{\r\n    pizzas:[],\r\n    loading:true,\r\n    error:[],\r\n\r\n  })\r\n  useEffect(() => {\r\n\r\n           const fetchData=async()=>{\r\n            dispatch({type:'FETCH_REQUEST'});\r\n            try {\r\n                 const {data}=await axios.get(`/api/products/search/?category=${category}`);\r\n                 console.log(data)\r\n                 dispatch({type:'FETCH_SUCCESS',payload:data})\r\n            } catch (error) {\r\n                dispatch({type:'FETCH_FAIL',payload:error.message})\r\n            }\r\n           \r\n           \r\n        };\r\n        fetchData();\r\n  },[category])\r\n    return (\r\n        <div>\r\n            <h1 style={{ textAlign: 'center' }}>{category} Pizzas</h1>\r\n                 <Row>\r\n                            {pizzas.map((Pizza) => {\r\n                                return (\r\n                                    <Col key={Pizza.id} sm={6} md={4} lg={3} className=\"mb-3\">\r\n                                     <Card className=\"product\">\r\n                                        <Card.Title>{Pizza.name}</Card.Title>\r\n                                        <Card.Body>\r\n                                            <Link to={`/product/${Pizza._id}`}>\r\n                                            <img src={Pizza.image} alt={Pizza.name}/>\r\n                                            </Link>\r\n                                        </Card.Body>\r\n                                        <Card.Text>{Pizza.description}</Card.Text>\r\n                                        \r\n                                     </Card>\r\n                                    </Col>\r\n                                )\r\n\r\n                            })\r\n                            }\r\n                        </Row>\r\n           \r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\OrderHistoryScreen.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\OrderScreen.js",["148","149"],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\Protectedroute.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\OrderListScreen.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\ProfileScreen.js",["150"],[],"import React, { useContext, useReducer, useState } from 'react'\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { Store } from '../Store';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/esm/Button';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nconst reducer=(state,action)=>{\r\n  switch(action.type){\r\n    case 'UPDATE_REQUEST': return { ...state, loadingUpdate: true};\r\n    case 'UPDATE_SUCCESS':return {...state,loadingUpdate:false};\r\n    case 'UPDATE_FAIL':return {...state,loadingUpdate:false};\r\n    default : return state;\r\n  }\r\n}\r\nfunction ProfileScreen() {\r\n    const { state, dispatch: ctxDispatch } = useContext(Store);\r\n    const { userInfo } = state;\r\n    const [name,setName]=useState(userInfo.name);\r\n    const [email,setEmail]=useState(userInfo.email);\r\n    const [password,setPassword]=useState('');\r\n    const [confirmPassword,setconfirmPassword]=useState('');\r\n    const [{loadingUpdate},dispatch]=useReducer(reducer,{\r\n        loadingUpdate:false,\r\n    })\r\n    const submitHandler= async(e)=>{\r\n           e.preventDefault();\r\n           try {\r\n            const { data}=await axios.put('/api/users/profile',{\r\n                name,\r\n                email,\r\n                password\r\n            },{\r\n                headers:{authorization:`Bearer${userInfo.token}`}\r\n            });\r\n            dispatch({type:'UPDATE_SUCCESS'});\r\n            ctxDispatch({type:'USER_SIGNIN',payload:data});\r\n            localStorage.setItem('userInof',JSON.stringify(data));\r\n            toast.success('User Updated SUccessFully')\r\n           } catch (error) {\r\n              dispatch({type:'FETCH_FAIL'});\r\n              toast.error(error);\r\n           }\r\n\r\n    }\r\n    return (\r\n        <div className=\"container small-container\">\r\n            <Helmet>\r\n                <title>User Profile</title>\r\n            </Helmet>\r\n            <h1 style={{ textAlign: 'center' }}>User ProfileScreen</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n             <Form.Label>Name</Form.Label>\r\n             <Form.Control value={name} onChange={(e) =>setName(e.target.value)} required >\r\n             </Form.Control>\r\n             </Form.Group>\r\n             <Form.Group>\r\n             <Form.Label>Email</Form.Label>\r\n             <Form.Control value={email} onChange={(e) =>setEmail(e.target.value)} required>\r\n             </Form.Control>\r\n             </Form.Group>\r\n             <Form.Group>\r\n             <Form.Label>Password</Form.Label>\r\n             <Form.Control value={password} onChange={(e) =>setPassword(e.target.value)} required type=\"password\">\r\n             </Form.Control>\r\n             </Form.Group>\r\n              <Form.Group>\r\n             <Form.Label>ConfirmPassword</Form.Label>\r\n             <Form.Control value={confirmPassword} onChange={(e) =>setconfirmPassword(e.target.value)} required type=\"password\">\r\n             </Form.Control>\r\n             </Form.Group>\r\n             <div className=\"mb-3\">\r\n                <Button type=\"submit\" variant=\"danger\">Update</Button>\r\n             </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\ProductListScreen.js",["151","152"],[],"import React, { useContext, useEffect, useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { toast } from 'react-toastify';\r\nimport { Store } from '../Store';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_REQUEST':\r\n      return { ...state, loading: true };\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        pizzas: action.payload,\r\n   \r\n        loading: false,\r\n      };\r\n    case 'FETCH_FAIL':\r\n      return { ...state, loading: false, error: action.payload };\r\n    case 'CREATE_REQUEST':\r\n      return { ...state, loadingCreate: true };\r\n    case 'CREATE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loadingCreate: false,\r\n      };\r\n    case 'CREATE_FAIL':\r\n      return { ...state, loadingCreate: false };\r\n\r\n    case 'DELETE_REQUEST':\r\n      return { ...state, loadingDelete: true, successDelete: false };\r\n    case 'DELETE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loadingDelete: false,\r\n        successDelete: true,\r\n      };\r\n    case 'DELETE_FAIL':\r\n      return { ...state, loadingDelete: false, successDelete: false };\r\n\r\n    case 'DELETE_RESET':\r\n      return { ...state, loadingDelete: false, successDelete: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default function ProductListScreen() {\r\n  const [\r\n    {\r\n      loading,\r\n      error,\r\n      pizzas,\r\n      loadingCreate,\r\n      loadingDelete,\r\n      successDelete,\r\n    },\r\n    dispatch,\r\n  ] = useReducer(reducer, {\r\n    loading: true,\r\n    error: '',\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n\r\n  const { state } = useContext(Store);\r\n  const { userInfo } = state;\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data } = await axios.get(`/api/products `, {\r\n        \r\n           headers:{authorization:`Bearer${userInfo.token}`},\r\n        });\r\n         \r\n        dispatch({ type: 'FETCH_SUCCESS', payload: data });\r\n      } catch (err) {}\r\n    };\r\n\r\n    if (successDelete) {\r\n      dispatch({ type: 'DELETE_RESET' });\r\n    } else {\r\n      fetchData();\r\n    }\r\n  }, [ userInfo, successDelete]);\r\n\r\n  const createHandler = async () => {\r\n    if (window.confirm('Are you sure to create?')) {\r\n      try {\r\n        dispatch({ type: 'CREATE_REQUEST' });\r\n        const { data } = await axios.post(\r\n          '/api/products',\r\n          {},\r\n          {\r\n             headers:{authorization:`Bearer${userInfo.token}`},\r\n          }\r\n        );\r\n        toast.success('product created successfully');\r\n        dispatch({ type: 'CREATE_SUCCESS' });\r\n        navigate(`/admin/productlist/${data.pizzas._id}`);\r\n      } catch (err) {\r\n        toast.error(err);\r\n        dispatch({\r\n          type: 'CREATE_FAIL',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const deleteHandler = async (product) => {\r\n    if (window.confirm('Are you sure to delete?')) {\r\n      try {\r\n        await axios.delete(`/api/products/${product._id}`, {\r\n          headers:{authorization:`Bearer${userInfo.token}`}\r\n        });\r\n        toast.success('product deleted successfully');\r\n        dispatch({ type: 'DELETE_SUCCESS' });\r\n      } catch (err) {\r\n        toast.error(error);\r\n        dispatch({\r\n          type: 'DELETE_FAIL',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className=\"col text-end\">\r\n          <div>\r\n            <Button type=\"button\" variant=\"danger\" onClick={createHandler}>\r\n              Create Product\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      {loadingCreate && <LoadingBox></LoadingBox>}\r\n      {loadingDelete && <LoadingBox></LoadingBox>}\r\n\r\n      {loading ? (\r\n        <LoadingBox></LoadingBox>\r\n      ) : error ? (\r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      ) : (\r\n        <>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th>ACTIONS</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pizzas.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => navigate(`/admin/product/${product._id}`)}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                    &nbsp;\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => deleteHandler(product)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n         \r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\UserEditScreen.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\ProductEditScreen.js",["153","154","155"],[],"import React, { useContext, useEffect, useReducer, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport { Store } from '../Store';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport LoadingBox from '../components/LoadingBox';\r\nimport MessageBox from '../components/MessageBox';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_REQUEST':\r\n            return { ...state, loading: true };\r\n        case 'FETCH_SUCCESS':\r\n            return { ...state, loading: false };\r\n        case 'FETCH_FAIL':\r\n            return { ...state, loading: false, error: action.payload };\r\n        case 'UPDATE_REQUEST':\r\n            return { ...state, loadingUpdate: true };\r\n        case 'UPDATE_SUCCESS':\r\n            return { ...state, loadingUpdate: false };\r\n        case 'UPDATE_FAIL':\r\n            return { ...state, loadingUpdate: false };\r\n        case 'UPLOAD_REQUEST':\r\n            return { ...state, loadingUpload: true, errorUpload: '' };\r\n        case 'UPLOAD_SUCCESS':\r\n            return {\r\n                ...state,\r\n                loadingUpload: false,\r\n                errorUpload: '',\r\n            };\r\n        case 'UPLOAD_FAIL':\r\n            return { ...state, loadingUpload: false, errorUpload: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default function ProductEditScreen() {\r\n    const navigate = useNavigate();\r\n    const params = useParams(); // /product/:id\r\n    const { id: productId } = params;\r\n\r\n    const { state } = useContext(Store);\r\n    const { userInfo } = state;\r\n    const [{ loading, error, loadingUpdate, loadingUpload }, dispatch] =\r\n        useReducer(reducer, {\r\n            loading: true,\r\n            error: '',\r\n        });\r\n\r\n    const [name, setName] = useState('');\r\n   \r\n    const [prices, setPrice] = useState('');\r\n    const [image, setImage] = useState('');\r\n  \r\n    const [category, setCategory] = useState('');\r\n    const [countInStock, setCountInStock] = useState('');\r\n   \r\n    const [description, setDescription] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                dispatch({ type: 'FETCH_REQUEST' });\r\n                const { data } = await axios.get(`/api/products/${productId}`);\r\n                 console.log(data);\r\n                setName(data.name);\r\n                setPrice(data.prices);\r\n                setImage(data.image);\r\n              \r\n                setCategory(data.category);\r\n                setCountInStock(data.countInStock);\r\n               \r\n                setDescription(data.description);\r\n                dispatch({ type: 'FETCH_SUCCESS' });\r\n            } \r\n             \r\n              catch (err) {\r\n                dispatch({\r\n                    type: 'FETCH_FAIL',\r\n                    payload: err,\r\n                });\r\n            }\r\n          \r\n\r\n        };\r\n        fetchData();\r\n    }, [productId]);\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            dispatch({ type: 'UPDATE_REQUEST' });\r\n            await axios.put(\r\n                `/api/products/${productId}`,\r\n                {\r\n                    _id: productId,\r\n                    name,\r\n                    \r\n                    prices,\r\n                    image,\r\n                    \r\n                    category,\r\n                \r\n                    countInStock,\r\n                    description,\r\n                },\r\n                {\r\n                     headers:{authorization:`Bearer${userInfo.token}`},\r\n                }\r\n            );\r\n            dispatch({\r\n                type: 'UPDATE_SUCCESS',\r\n            });\r\n            toast.success('Product updated successfully');\r\n            navigate('/admin/productlist');\r\n        } catch (err) {\r\n            toast.error(err);\r\n            dispatch({ type: 'UPDATE_FAIL' });\r\n        }\r\n    };\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        \r\n        const bodyFormData = new FormData();\r\n        bodyFormData.append('file', file);\r\n        try {\r\n            dispatch({ type: 'UPLOAD_REQUEST' });\r\n            const { data } = await axios.post('/api/upload', bodyFormData, {\r\n                headers: {\r\n                    'Content-Type':'multipart/form-data',\r\n                    authorization:`Bearer${userInfo.token}`,\r\n                   \r\n                },\r\n            });\r\n            console.log(data);\r\n            dispatch({ type: 'UPLOAD_SUCCESS' });\r\n\r\n           \r\n        } catch (err) {\r\n            toast.error(err);\r\n            dispatch({ type: 'UPLOAD_FAIL', payload: err });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container className=\"small-container\">\r\n            <Helmet>\r\n                <title>Edit Product ${productId}</title>\r\n            </Helmet>\r\n            <h1>Edit Product {productId}</h1>\r\n\r\n            {loading ? (\r\n                <LoadingBox></LoadingBox>\r\n            ) : error ? (\r\n                <MessageBox variant=\"danger\">{error}</MessageBox>\r\n            ) : (\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                   \r\n                    <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control\r\n                            value={prices}\r\n                            onChange={(e) => setPrice(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"image\">\r\n                        <Form.Label>Image File</Form.Label>\r\n                        <Form.Control\r\n                            value={image}\r\n                            onChange={(e) => setImage(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                 \r\n                 \r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"category\">\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control\r\n                            value={category}\r\n                            onChange={(e) => setCategory(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group className=\"mb-3\" controlId=\"countInStock\">\r\n                        <Form.Label>Count In Stock</Form.Label>\r\n                        <Form.Control\r\n                            value={countInStock}\r\n                            onChange={(e) => setCountInStock(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"description\">\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control\r\n                            value={description}\r\n                            onChange={(e) => setDescription(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    <div className=\"mb-3\">\r\n                        <Button disabled={loadingUpdate} type=\"submit\">\r\n                            Update\r\n                        </Button>\r\n                        {loadingUpdate && <LoadingBox></LoadingBox>}\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Container>\r\n    );\r\n}","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\UserListScreen.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\Dashboardscreen.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\MessageBox.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\Product.js",["156"],[],"import React, { useState, useContext } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport Card from 'react-bootstrap/Card';\r\nimport axios from 'axios';\r\nimport { Store } from '../Store';\r\n\r\nfunction Product(props) {\r\n    const { Pizza } = props;\r\n    const { state, dispatch: ctxDispatch } = useContext(Store);\r\n    const { cart: { cartItems } } = state; \r\n  \r\n    const addtoCartHandler = async (item) => {\r\n        \r\n        const existItem = cartItems.find((x) => x._id === Pizza._id);\r\n         \r\n        const quantity = existItem ? existItem.quantity + 1 : 1;\r\n\r\n        const { data } = await axios.get(`/api/products/${item._id}`);\r\n\r\n        if (data.countInStock < quantity) {\r\n            window.alert('Sorry Product is out of Stock')\r\n            return;\r\n        }\r\n        ctxDispatch({ type: 'CART_ADD_ITEM', payload: { ...item, quantity } });\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card className=\"product\">\r\n                <Link to={`/product/${Pizza._id}`}>\r\n                    <img src={Pizza.image} alt={Pizza.name} />\r\n                </Link>\r\n                <Card.Body>\r\n                    <Link to={`/product/${Pizza._id}`} style={{ textDecoration: 'none' }}>\r\n                        <Card.Text style={{ color: 'black', }} className=\"text-center\">{Pizza.name}</Card.Text>\r\n                    </Link>\r\n                    <div className=\"product-varient\">\r\n                        <Card.Text> <span>Varient</span>:{Pizza.varients[0]}</Card.Text>\r\n                        <Card.Text>Rs {Pizza.prices}</Card.Text>\r\n                    </div>\r\n                    {Pizza.countInStock === 0 ?\r\n                        <Button variant=\"light\" className=\"text-center\" disabled >Out of Stock</Button> :\r\n                        <Button variant=\"danger\" className=\"text-center\" onClick={() => addtoCartHandler(Pizza)} > Add to Cart</Button>\r\n                    }\r\n\r\n                </Card.Body>\r\n            </Card>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\Checkoutsteps.js",[],[],"C:\\Users\\Admin\\OneDrive\\Desktop\\pizza palace\\PizzaPalace\\client\\src\\components\\LoadingBox.js",[],[],{"ruleId":"157","severity":1,"message":"158","line":28,"column":8,"nodeType":"159","messageId":"160","endLine":28,"endColumn":22},{"ruleId":"157","severity":1,"message":"161","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"157","severity":1,"message":"161","line":1,"column":8,"nodeType":"159","messageId":"160","endLine":1,"endColumn":13},{"ruleId":"157","severity":1,"message":"162","line":10,"column":8,"nodeType":"159","messageId":"160","endLine":10,"endColumn":21},{"ruleId":"157","severity":1,"message":"163","line":1,"column":29,"nodeType":"159","messageId":"160","endLine":1,"endColumn":37},{"ruleId":"157","severity":1,"message":"164","line":5,"column":9,"nodeType":"159","messageId":"160","endLine":5,"endColumn":16},{"ruleId":"157","severity":1,"message":"165","line":5,"column":8,"nodeType":"159","messageId":"160","endLine":5,"endColumn":14},{"ruleId":"157","severity":1,"message":"166","line":22,"column":9,"nodeType":"159","messageId":"160","endLine":22,"endColumn":16},{"ruleId":"157","severity":1,"message":"167","line":22,"column":17,"nodeType":"159","messageId":"160","endLine":22,"endColumn":22},{"ruleId":"157","severity":1,"message":"168","line":41,"column":27,"nodeType":"159","messageId":"160","endLine":41,"endColumn":38},{"ruleId":"157","severity":1,"message":"169","line":47,"column":7,"nodeType":"159","messageId":"160","endLine":47,"endColumn":21},{"ruleId":"157","severity":1,"message":"170","line":23,"column":13,"nodeType":"159","messageId":"160","endLine":23,"endColumn":26},{"ruleId":"157","severity":1,"message":"171","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":14},{"ruleId":"157","severity":1,"message":"172","line":3,"column":16,"nodeType":"159","messageId":"160","endLine":3,"endColumn":27},{"ruleId":"157","severity":1,"message":"173","line":8,"column":8,"nodeType":"159","messageId":"160","endLine":8,"endColumn":17},{"ruleId":"157","severity":1,"message":"174","line":51,"column":45,"nodeType":"159","messageId":"160","endLine":51,"endColumn":58},{"ruleId":"157","severity":1,"message":"175","line":128,"column":11,"nodeType":"159","messageId":"160","endLine":128,"endColumn":28},{"ruleId":"157","severity":1,"message":"163","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":25},"no-unused-vars","'Protectedroute' is defined but never used.","Identifier","unusedVar","'react' is defined but never used.","'ListGroupItem' is defined but never used.","'useState' is defined but never used.","'Helment' is defined but never used.","'Button' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'ctxDispatch' is assigned a value but never used.","'successDeliver' is assigned a value but never used.","'loadingUpdate' is assigned a value but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'ListGroup' is defined but never used.","'loadingUpload' is assigned a value but never used.","'uploadFileHandler' is assigned a value but never used."]